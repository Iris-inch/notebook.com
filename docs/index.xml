<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ShinOno</title>
    <link>https://iris-inch.github.io/notebook.com/</link>
    <description>Recent content on ShinOno</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Fri, 17 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://iris-inch.github.io/notebook.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HiC-Proの導入方法</title>
      <link>https://iris-inch.github.io/notebook.com/post/hicpro/</link>
      <pubDate>Fri, 17 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://iris-inch.github.io/notebook.com/post/hicpro/</guid>
      <description>HiC-Proの導入において苦戦したため解説を残しておく。 HiC-Proのインストールは、Conda, Docker, Singularityを用いることで楽に行える。 基本的にはcondaで行うことになるであろうが、既存のpython環境とごっちゃになってしまうらしいので、パッケージ管理等に注意が必要である。 ローカル環境ではスペック不足で何十時間もかかってしまう上に、ストレージ容量が足りないため、Hi-C解析は遺伝研でのみ行うことになるであろう。 今回はローカルでの導入方法も載せるが、遺伝研スパコンで行うことを進める。 遺伝研スパコンの場合(https://sc.ddbj.nig.ac.jp/software/python) python (https://conda.io/projects/conda/en/latest/user-guide/install/linux.html) このリンクからMinicondaを選び、好きなバージョンのリンクを選ぶ。
wget &amp;#39;link&amp;#39; で遺伝研上の好きなところに落としてくる。
bash Miniconda3-py39_4.10.3-Linux-x86_64.sh を実行。conda initはNO。 あとは、condaにpathを通す。 .bashrcに
PATH=&amp;#39;~/miniconda3/bin:$PATH&amp;#39; を書く。 また、
$ conda config --add channels conda-forge $ conda config --set channel_priority strict $ vim ~/.condarc でconda-forgeレポジトリをデフォルトに設定し、.condarcのトップに追加されたことを確認。 これでcondaの導入は終了。
2. 環境の作成 git clone https://github.com/nservant/HiC-Pro.git でgithubからHiC-Proのレポジトリを好きな場所に落としてくる。
conda env create -f MY_INSTALL_PATH/HiC-Pro/environment.yml -p WHERE_TO_INSTALL_MY_ENV conda activate WHERE_TO_INSTALL_MY_ENV でconda環境を作る。（大文字は自分で指定） すると、WHERE_TO_INSTALL_MY_ENVに必要なもの全てがインストールされている。
3. インストール まずは、githubから落として来たディレクトリの中にあるconfig-install.txtを編集する。 PREFIX	HiC-Pro本体を落とす場所 BOWTIE2_PATH WHERE_TO_INSTALL_MY_ENV/bin/bowtie2 SAMTOOLS_PATH WHERE_TO_INSTALL_MY_ENV/bin/samtools R_PATH	Full WHERE_TO_INSTALL_MY_ENV/bin/R PYTHON_PATH	WHERE_TO_INSTALL_MY_ENV/python(version) CLUSTER_SYS	SGE</description>
    </item>
    
    <item>
      <title>VS</title>
      <link>https://iris-inch.github.io/notebook.com/post/vs/</link>
      <pubDate>Fri, 13 Jan 2023 17:11:06 +0900</pubDate>
      
      <guid>https://iris-inch.github.io/notebook.com/post/vs/</guid>
      <description>VS codeを使ってgitの管理が楽に行えそうなので、使ってみる。 VS code上で記事の編集、commit、push等のサイト更新に必要なことが一通り行える。</description>
    </item>
    
    <item>
      <title>M1 macでバイオインフォマティクス講習を受けて苦労したこと</title>
      <link>https://iris-inch.github.io/notebook.com/post/m1_chip/</link>
      <pubDate>Mon, 19 Dec 2022 17:26:29 +0900</pubDate>
      
      <guid>https://iris-inch.github.io/notebook.com/post/m1_chip/</guid>
      <description>バイオインフォマティクス講習ではさまざまなツールやパッケージを扱うが、
いくつかがM1チップ(arm64)に対応していなかったので一応の解決策を挙げる。
HISAT2周りの導入 HISAT2周りのツールのインストール・実行の際にエラーが出る。
解決策は2つあるが、後者をお勧めする。
1. x86_64バージョンのbrewもインストールする arch -x86_64 /bin/bash -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh) でx86_64バージョンのbrewをインストールする。
このbrewを用いてパッケージをインストールするには、
arch -x86_64 brew install PACKAGE を使う。
参考:古いbrewのインストールと動かし方
ただし、この方法だと他のパッケージと組み合わせるときに、どちらのbrewを参照するかで不備が生じる可能性がある。
2. バイナリ版をダウンロードし、PATHを通す。 詳しくは先輩のページを参照されたし。
RパッケージTCC (edgeR)のインストール BiocManagerでTCCをインストールする際に、edgeRとその他がインストールできなくなっている。
私の環境では、gfortranをインストールすることで動くようになった。
gfortran
How to install
場合によっては、Xcodeのインストールも必要かもしれない。
この方法により、edgeRはインストールできたが、nlmeはできなかったため、根本的な解決にはなっていないと思われる。</description>
    </item>
    
  </channel>
</rss>
